{
    "542390": {
        "success": true,
        "data": {
            "type": "demo",
            "name": "Slingshot people Demo",
            "steam_appid": 542390,
            "required_age": 0,
            "is_free": true,
            "detailed_description": "================================================================<br>Copyright   1996-2016, Valve Corporation, All rights reserved.<br>ï¿½<br>================================================================<br>Welcome to the Steamworks SDK.  For documentation please see our partner <br>website at: <a href=\"http://partner.steamgames.com\" target=\"_blank\" rel=\"noreferrer\"  >http://partner.steamgames.com</a><br><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.37 23rd May 2016</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul>Starting with this release, SDK forward-compatibility has been improved. All <br>executables and libraries built using the official C++ headers from this SDK <br>will continue to work even when paired with runtime DLLs from future SDKs. This <br>will eventually allow for the mixing of dynamic libraries (such as third-party <br>plug-ins) built with different versions of Steamworks.<br>The VERSION_SAFE_STEAM_API_INTERFACES compile-time flag is no longer necessary <br>for cross-version compatibility, and the SteamAPI_InitSafe and <br>SteamGameServer_InitSafe functions have been removed. Applications which <br>currently use these InitSafe functions should be changed to use the normal Init <br>functions instead.<br>ISteamRemoteStorage<br><ul class=\"bb_ul\"><li> Removed unsed UGCHandle_t m_hFile from RemoteStoragePublishedFileUpdated_t</li></ul><h2 class=\"bb_tag\">Isteamugc</h2><ul class=\"bb_ul\"><li> Added ability to add additional preview types to UGC such as standard images, </li></ul><h2 class=\"bb_tag\">Youtube Videos, Sketchfab Models, Etc.</h2><h2 class=\"bb_tag\">Isteamuser</h2><ul class=\"bb_ul\"><li> Added BIsPhoneVerified()<br></li><li> Added BIsTwoFactorEnabled()</li></ul><h2 class=\"bb_tag\">Isteamutils</h2><ul class=\"bb_ul\"><li> Added IsSteamInBigPictureMode()<br></li><li> Added StartVRDashboard(), which asks Steam to create and render the OpenVR </li></ul><h2 class=\"bb_tag\">Dashboard</h2><h2 class=\"bb_tag\">Isteamapps</h2><ul class=\"bb_ul\"><li> Added RequestAllProofOfPurchaseKeys<br></li><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.36 9th February 2016</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">Isteamcontroller</h2><ul class=\"bb_ul\"><li> added new function TriggerRepeatedHapticPulse()</li></ul><h2 class=\"bb_tag\">Revision history</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.35 21st September 2015</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">Isteamcontroller</h2> * The controller API has been redesigned to work with production Steam <br>Controllers and take advantage of the configuration panel inside of Steam. The <br>documentation on the partner site has a full overview of the new API.<br>ISteamRemoteStorage:<br> * Added asynchronous file read and write methods. These methods will not block <br>your calling thread for the duration of the disk IO. Additionally, the IO is <br>performed in a worker thread in the Steam engine, so they will not impact other <br>Steam API calls.<br>  - FileWriteAsync: Similar in use to FileWrite, however it returns a <br>SteamAPICall_t handle. Use the RemoteStorageFileWriteAsyncComplete_t structure <br>with your asynchronous Steam API handler, and that will indicate the results of <br>the write. The data buffer passed in to FileWriteAsync is immediately copied, so<br>you do not have to ensure it is valid throughout the entire asynchronous <br>process.<br>  - FileReadAsync: This function queues an asynchronous read on the file <br>specified, and also returns a SteamAPICall_t handle. The completion event uses <br>the new RemoteStorageFileReadAsyncComplete_t structure. Upon successful <br>completion, you can use the new FileReadAsyncComplete function to read the data <br><ul class=\"bb_ul\"><li>- passing in the original call handle, a pointer to a buffer for the data, and </li></ul>the amount to read (which generally should be equal to the amount read as <br>specified by the callback structure, which generally will be equal to the amount<br>requested). Additionally, the FileReadAsync function lets you specify an offset <br>to read at, so it is no longer necessary to read the entire file in one call.<br><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.34 28th July 2015</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">Isteamugc</h2><ul class=\"bb_ul\"><li> Added ability to set and retrieve key-value tags on an item. There can be </li></ul><h2 class=\"bb_tag\">Multiple Values For Each Key.</h2><ul class=\"bb_ul\"><li> Added ability to query all UGC that have matching key-value tags.<br></li><li> Added ability to specify a title and description on an item for a specific </li></ul><h2 class=\"bb_tag\">Language (defaults to English).</h2><ul class=\"bb_ul\"><li> Added ability to query for items and return the title and description in a </li></ul><h2 class=\"bb_tag\">Preferred Language.</h2><ul class=\"bb_ul\"><li> Added ability to vote on an item and retrieve the current user's vote on a </li></ul><h2 class=\"bb_tag\">Given Item (duplicated From isteamremotestorage).</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.33 6th May 2015</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">Ugc</h2><ul class=\"bb_ul\"><li> Added DownloadItem(), which will force download a piece of UGC (it will be </li></ul>cached based on usage). This can be used by stand-alone game servers.<br><ul class=\"bb_ul\"><li> Renamed GetItemUpdateInfo() =&gt; GetItemDownloadInfo() and added GetItemState() </li></ul>which can be used to determine whether an item is currently being downloaded, <br>has already been downloaded, etc.<br><ul class=\"bb_ul\"><li> Added ability to set and retrieve developer metadata for an item<br></li><li> Added ability to modify a user's favorites list<br></li><li> Added ability to retrieve preview image &amp; video URLs<br></li><li> Added ability to retrieve &quot;children&quot; for an item (e.g. for collections)<br></li><li> Added ability to retrieve stats, such as current number of subscribers, </li></ul><h2 class=\"bb_tag\">Lifetime Unique Subscribers, Etc.</h2><h2 class=\"bb_tag\">Steamvr</h2><ul class=\"bb_ul\"><li> steamvr.h has been removed. You can use the OpenVR SDK to access those </li></ul>interfaces: <a href=\"https://steamcommunity.com/linkfilter/?url=https://github.com/ValveSoftware/openvr\" target=\"_blank\" rel=\"noopener\"  >https://github.com/ValveSoftware/openvr</a><br>SteamVideo<br><ul class=\"bb_ul\"><li> Added ability to check if a user is currently broadcasting<br></li><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.32 5th February 2015</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">General</h2><ul class=\"bb_ul\"><li> Added an auto-generated &quot;flat&quot; C-style API for common Steamworks features </li></ul><h2 class=\"bb_tag\">(steam_api_flat.h)</h2><ul class=\"bb_ul\"><li> Added an auto-generated C# binding for common Steamworks features </li></ul><h2 class=\"bb_tag\">(steam_api_interop.cs)</h2><ul class=\"bb_ul\"><li> Expanded the ISteamFriends interface to include steam levels and friends </li></ul><h2 class=\"bb_tag\">Groups</h2><ul class=\"bb_ul\"><li> Expanded the ISteamHTTP interface to include cookie handling, SSL certificate </li></ul><h2 class=\"bb_tag\">Verification, and Network Timeouts</h2><ul class=\"bb_ul\"><li> Fixed typos in ISteamHTMLSurface interface constants</li></ul><h2 class=\"bb_tag\">Inventory</h2><ul class=\"bb_ul\"><li> Added the initial version of ISteamInventory, a developer-preview release of </li></ul>our new Steam Inventory Service for managing and tracking a Steam-compatible <br>inventory of in-game items. Please see the documentation for the Inventory <br>Service on the partner website for more details.<br><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.31 8th September 2014</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">Ugc</h2><ul class=\"bb_ul\"><li> The Workshop item content API in ISteamUGC now supports legacy workshop items </li></ul>uploaded via the ISteamRemoteStorage interface. ISteamUGC::GetItemInstallInfo().<br>This will return whether the item was a legacy item or a new item. If it is a <br>legacy item, then the pchFolder variable will be the full path to the file.<br>HTML:<br><ul class=\"bb_ul\"><li> Added initial version of ISteamHTMLSurface API, which allows games to get </li></ul>textures for html pages and interact with them. There is also a sample <br>implementation in the SteamworksExample.<br>Virtual Reality:<br><ul class=\"bb_ul\"><li> Added VR_IsHmdPresent, which returns true if an HMD appears to be present but </li></ul>does not initialize the VR API. This is useful when enabling/disabling UI <br>elements to offer VR mode to a user.<br><ul class=\"bb_ul\"><li> Added VR_GetStringForHmdError which turns an HmdError enum value into a </li></ul><h2 class=\"bb_tag\">String.</h2><h2 class=\"bb_tag\">Steampipe</h2><ul class=\"bb_ul\"><li> The example Steampipe batch file (run_build.bat) now uses run_app_build_http </li></ul><h2 class=\"bb_tag\">Instead Of Run_app_build By Default.</h2><h2 class=\"bb_tag\">Contentprep.app</h2><ul class=\"bb_ul\"><li> Updated wxPython requirements for this app (version 2.7 and 2.8 supported). </li></ul>App will prompt with updated URL to download compatible packages if necessary.<br><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.30 10th July 2014</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">General</h2><ul class=\"bb_ul\"><li> Added a new Workshop item content API in ISteamUGC that is easy to use and </li></ul>allows multiple files per item without any size limits. It uses the same <br>  content system that handles regular content depots, resulting in faster and <br>smaller downloads due to delta patching. Subscribed workshop items will<br>  be placed in unique subfolders in the install folder, so the game doesn't need<br>to fetch them using ISteamRemoteStorage anymore. The new API is not<br>  backwards compatible with old items created with ISteamRemoteStorage. Added <br>Workshop feature to steamworksexample using ISteamUGC.<br>Steam VR:<br><ul class=\"bb_ul\"><li> VR_Init now requires that you call SteamAPI_Init first.<br></li><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.29 24th April 2014</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">General</h2><ul class=\"bb_ul\"><li> Adjust game server login to use a token instead of username/password. Tokens </li></ul>are randomly generated at account creation time and can be reset.<br><ul class=\"bb_ul\"><li> Added existing text param to ISteamUtils::ShowGamepadTextInput() so games can </li></ul><h2 class=\"bb_tag\">Prepopulate Control Before Displaying to User.</h2><ul class=\"bb_ul\"><li> Updated retail disc installer to use a single multi-language steamsetup.exe </li></ul><h2 class=\"bb_tag\">Replacing All Steam Install Msi Packages.</h2><ul class=\"bb_ul\"><li> Removed redistributable Steam libraries for dedicated servers. Standalone </li></ul>dedicated server should use shared &quot;Steamworks SDK Redist&quot; depots.<br><ul class=\"bb_ul\"><li> steamcmd is now included for Linux and OSX.</li></ul><h2 class=\"bb_tag\">Music</h2><ul class=\"bb_ul\"><li> Introducing API to control the Steam Music Player from external software. As </li></ul>an example this gives games the opportunity to pause the music or lower the <br>volume, when an important cut scene is shown, and start playing afterwards.<br><ul class=\"bb_ul\"><li> Added menu and code to the Steamworks Example to demonstrate this API.<br></li><li> This feature is currently limited to users in the Steam Music Player Beta. It </li></ul><h2 class=\"bb_tag\">Will Have No Effect On other Users.</h2><h2 class=\"bb_tag\">Ugc</h2><ul class=\"bb_ul\"><li> ISteamUGC - Add m_bCachedData to SteamUGCQueryCompleted_t and </li></ul>SteamUGCRequestUGCDetailsResult_t which can be used to determine if the data was<br>retrieved from the cache.<br><ul class=\"bb_ul\"><li> ISteamUGC - Allow clients to get cached responses for ISteamUGC queries. This </li></ul>is so client code doesn't have to build their own caching layer on top of <br>ISteamUGC.<br><ul class=\"bb_ul\"><li> ISteamRemoteStorage - add the name of the shared file to </li></ul>RemoteStorageFileShareResult_t so it can be matched up to the request if a game <br>has multiple outstanding FileShare requests going on at the same time<br>Steam VR:<br><ul class=\"bb_ul\"><li> Renamed GetEyeMatrix to GetHeadFromEyePose and made it return an HmdMatrix34t.</li></ul>This doesn't actually change the values it was returning, it just updates the <br>name to match the values that were already being returned. Changed the driver <br>interface too.<br><ul class=\"bb_ul\"><li> Renamed GetWorldFromHeadPose to GetTrackerFromHeadPose to avoid confusion </li></ul>about the game's world space vs. the tracker's coordinate system.<br><ul class=\"bb_ul\"><li> Also renamed GetLastWorldFromHeadPose to GetLastTrackerFromHeadPose.<br></li><li> Added GetTrackerZeroPose method to get the tracker zero pose.<br></li><li> Added VR support to the Linux/SDL version of the Steamworks Example.<br></li><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.28 28th January 2014</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------<br></li><li> Added Steamworks Virtual Reality API via steamvr.h.<br></li><li> Added ISteamUtils::IsSteamRunningInVRMode, which returns true if the Steam </li></ul><h2 class=\"bb_tag\">Client Is Running In Vr Mode.</h2><ul class=\"bb_ul\"><li> Deprecated ISteamGameserver::GetGameplayStats and </li></ul>ISteamGameserver::GetServerReputation. These calls already return no data and <br>will be removed in a future SDK update.<br><ul class=\"bb_ul\"><li> Added result code k_EResultRateLimitExceeded, which can now be returned if a </li></ul><h2 class=\"bb_tag\">User Has too Many outstanding Friend Requests.</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.26a 14th November 2013</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------<br></li><li> Fix missing accessor function in steam_api.h for SteamUGC()<br></li><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.26 6th November 2013</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------<br></li><li> Includes libsteam_api.so for 64-bit Linux.<br></li><li> Callbacks ValidateAuthTicketResponse_t and GSClientApprove_t now contain the </li></ul>SteamID of the owner of current game. If the game is borrowed, this is different<br>than the player's SteamID.<br><ul class=\"bb_ul\"><li> Added ISteamFriends::GetPlayerNickname, which returns the nickname the current</li></ul><h2 class=\"bb_tag\">User Has Set For the Specified Player.</h2><ul class=\"bb_ul\"><li> Fix p2p networking apis on Linux so they work with dedicated servers<br></li><li> Fix command line argument handling bug in SteamAPI_RestartAppIfNecessary on </li></ul><h2 class=\"bb_tag\">Linux and Osx.</h2><ul class=\"bb_ul\"><li> Added ISteamApps::GetLaunchQueryParam, which will get the value associated </li></ul>with the given key if a game is launched via a url with query paramaters, such <br>as steam://run///?param1=value1;param2=value2;param3=value3.  If the game<br>is already running when such a url is executed, instead it will receive a <br>NewLaunchQueryParameters_t callback.<br><ul class=\"bb_ul\"><li> Added EUGCReadAction parameter to ISteamRemoteStorage:UGCRead that allows the </li></ul>game to keep the file open if it needs to seek around the file for arbitrary <br>data, rather than always closing the file when the last byte is read.<br><ul class=\"bb_ul\"><li> Added new ISteamUGC interface that is used for querying for lists of UGC </li></ul>details (e.g. Workshop items, screenshots, videos, artwork, guides, etc.). The <br>ISteamUGC interface should be used instead of ISteamRemoteStorage, which <br>contains similar, but less flexible and powerful functionality.<br><ul class=\"bb_ul\"><li> Removed tools for deprecated content system<br></li><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.25 1st october 2013</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------<br></li><li> Fixed a crash in the 1.24 SDK update when attempting to call </li></ul>ISteamRemoteStorage::GetPublishedFileDetails by adding a missing parameter <br>unMaxSecondsOld, which allows a game to request potentially-cached details <br>(passing a value of 0 retains the previous behavior).<br><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.24</h2><h2 class=\"bb_tag\">17th July 2013</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">User</h2><ul class=\"bb_ul\"><li> Added ISteamUser::GetBadgeLevel and ISteamUser::GetPlayerSteamLevel functions</li></ul><h2 class=\"bb_tag\">Friends</h2><ul class=\"bb_ul\"><li> Games can now initiate Steam Friend requests, removals, request -accepts and </li></ul>request-ignores via ISteamFriends  ActivateGameOverlayToUser API. This prompts <br>ï¿½<br>the user for confirmation before action is taken.<br>Mac:<br><ul class=\"bb_ul\"><li> Updated the OS X Content Prep tool and game wrapper for improved compatibility</li></ul><h2 class=\"bb_tag\">With Os X 10.8 (mountain Lion).</h2><h2 class=\"bb_tag\">Linux</h2><ul class=\"bb_ul\"><li> Added install script for the Steam Linux Runtime tools (run &quot;bash </li></ul>",
            "about_the_game": "================================================================<br>Copyright   1996-2016, Valve Corporation, All rights reserved.<br>ï¿½<br>================================================================<br>Welcome to the Steamworks SDK.  For documentation please see our partner <br>website at: <a href=\"http://partner.steamgames.com\" target=\"_blank\" rel=\"noreferrer\"  >http://partner.steamgames.com</a><br><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.37 23rd May 2016</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul>Starting with this release, SDK forward-compatibility has been improved. All <br>executables and libraries built using the official C++ headers from this SDK <br>will continue to work even when paired with runtime DLLs from future SDKs. This <br>will eventually allow for the mixing of dynamic libraries (such as third-party <br>plug-ins) built with different versions of Steamworks.<br>The VERSION_SAFE_STEAM_API_INTERFACES compile-time flag is no longer necessary <br>for cross-version compatibility, and the SteamAPI_InitSafe and <br>SteamGameServer_InitSafe functions have been removed. Applications which <br>currently use these InitSafe functions should be changed to use the normal Init <br>functions instead.<br>ISteamRemoteStorage<br><ul class=\"bb_ul\"><li> Removed unsed UGCHandle_t m_hFile from RemoteStoragePublishedFileUpdated_t</li></ul><h2 class=\"bb_tag\">Isteamugc</h2><ul class=\"bb_ul\"><li> Added ability to add additional preview types to UGC such as standard images, </li></ul><h2 class=\"bb_tag\">Youtube Videos, Sketchfab Models, Etc.</h2><h2 class=\"bb_tag\">Isteamuser</h2><ul class=\"bb_ul\"><li> Added BIsPhoneVerified()<br></li><li> Added BIsTwoFactorEnabled()</li></ul><h2 class=\"bb_tag\">Isteamutils</h2><ul class=\"bb_ul\"><li> Added IsSteamInBigPictureMode()<br></li><li> Added StartVRDashboard(), which asks Steam to create and render the OpenVR </li></ul><h2 class=\"bb_tag\">Dashboard</h2><h2 class=\"bb_tag\">Isteamapps</h2><ul class=\"bb_ul\"><li> Added RequestAllProofOfPurchaseKeys<br></li><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.36 9th February 2016</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">Isteamcontroller</h2><ul class=\"bb_ul\"><li> added new function TriggerRepeatedHapticPulse()</li></ul><h2 class=\"bb_tag\">Revision history</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.35 21st September 2015</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">Isteamcontroller</h2> * The controller API has been redesigned to work with production Steam <br>Controllers and take advantage of the configuration panel inside of Steam. The <br>documentation on the partner site has a full overview of the new API.<br>ISteamRemoteStorage:<br> * Added asynchronous file read and write methods. These methods will not block <br>your calling thread for the duration of the disk IO. Additionally, the IO is <br>performed in a worker thread in the Steam engine, so they will not impact other <br>Steam API calls.<br>  - FileWriteAsync: Similar in use to FileWrite, however it returns a <br>SteamAPICall_t handle. Use the RemoteStorageFileWriteAsyncComplete_t structure <br>with your asynchronous Steam API handler, and that will indicate the results of <br>the write. The data buffer passed in to FileWriteAsync is immediately copied, so<br>you do not have to ensure it is valid throughout the entire asynchronous <br>process.<br>  - FileReadAsync: This function queues an asynchronous read on the file <br>specified, and also returns a SteamAPICall_t handle. The completion event uses <br>the new RemoteStorageFileReadAsyncComplete_t structure. Upon successful <br>completion, you can use the new FileReadAsyncComplete function to read the data <br><ul class=\"bb_ul\"><li>- passing in the original call handle, a pointer to a buffer for the data, and </li></ul>the amount to read (which generally should be equal to the amount read as <br>specified by the callback structure, which generally will be equal to the amount<br>requested). Additionally, the FileReadAsync function lets you specify an offset <br>to read at, so it is no longer necessary to read the entire file in one call.<br><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.34 28th July 2015</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">Isteamugc</h2><ul class=\"bb_ul\"><li> Added ability to set and retrieve key-value tags on an item. There can be </li></ul><h2 class=\"bb_tag\">Multiple Values For Each Key.</h2><ul class=\"bb_ul\"><li> Added ability to query all UGC that have matching key-value tags.<br></li><li> Added ability to specify a title and description on an item for a specific </li></ul><h2 class=\"bb_tag\">Language (defaults to English).</h2><ul class=\"bb_ul\"><li> Added ability to query for items and return the title and description in a </li></ul><h2 class=\"bb_tag\">Preferred Language.</h2><ul class=\"bb_ul\"><li> Added ability to vote on an item and retrieve the current user's vote on a </li></ul><h2 class=\"bb_tag\">Given Item (duplicated From isteamremotestorage).</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.33 6th May 2015</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">Ugc</h2><ul class=\"bb_ul\"><li> Added DownloadItem(), which will force download a piece of UGC (it will be </li></ul>cached based on usage). This can be used by stand-alone game servers.<br><ul class=\"bb_ul\"><li> Renamed GetItemUpdateInfo() =&gt; GetItemDownloadInfo() and added GetItemState() </li></ul>which can be used to determine whether an item is currently being downloaded, <br>has already been downloaded, etc.<br><ul class=\"bb_ul\"><li> Added ability to set and retrieve developer metadata for an item<br></li><li> Added ability to modify a user's favorites list<br></li><li> Added ability to retrieve preview image &amp; video URLs<br></li><li> Added ability to retrieve &quot;children&quot; for an item (e.g. for collections)<br></li><li> Added ability to retrieve stats, such as current number of subscribers, </li></ul><h2 class=\"bb_tag\">Lifetime Unique Subscribers, Etc.</h2><h2 class=\"bb_tag\">Steamvr</h2><ul class=\"bb_ul\"><li> steamvr.h has been removed. You can use the OpenVR SDK to access those </li></ul>interfaces: <a href=\"https://steamcommunity.com/linkfilter/?url=https://github.com/ValveSoftware/openvr\" target=\"_blank\" rel=\"noopener\"  >https://github.com/ValveSoftware/openvr</a><br>SteamVideo<br><ul class=\"bb_ul\"><li> Added ability to check if a user is currently broadcasting<br></li><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.32 5th February 2015</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">General</h2><ul class=\"bb_ul\"><li> Added an auto-generated &quot;flat&quot; C-style API for common Steamworks features </li></ul><h2 class=\"bb_tag\">(steam_api_flat.h)</h2><ul class=\"bb_ul\"><li> Added an auto-generated C# binding for common Steamworks features </li></ul><h2 class=\"bb_tag\">(steam_api_interop.cs)</h2><ul class=\"bb_ul\"><li> Expanded the ISteamFriends interface to include steam levels and friends </li></ul><h2 class=\"bb_tag\">Groups</h2><ul class=\"bb_ul\"><li> Expanded the ISteamHTTP interface to include cookie handling, SSL certificate </li></ul><h2 class=\"bb_tag\">Verification, and Network Timeouts</h2><ul class=\"bb_ul\"><li> Fixed typos in ISteamHTMLSurface interface constants</li></ul><h2 class=\"bb_tag\">Inventory</h2><ul class=\"bb_ul\"><li> Added the initial version of ISteamInventory, a developer-preview release of </li></ul>our new Steam Inventory Service for managing and tracking a Steam-compatible <br>inventory of in-game items. Please see the documentation for the Inventory <br>Service on the partner website for more details.<br><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.31 8th September 2014</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">Ugc</h2><ul class=\"bb_ul\"><li> The Workshop item content API in ISteamUGC now supports legacy workshop items </li></ul>uploaded via the ISteamRemoteStorage interface. ISteamUGC::GetItemInstallInfo().<br>This will return whether the item was a legacy item or a new item. If it is a <br>legacy item, then the pchFolder variable will be the full path to the file.<br>HTML:<br><ul class=\"bb_ul\"><li> Added initial version of ISteamHTMLSurface API, which allows games to get </li></ul>textures for html pages and interact with them. There is also a sample <br>implementation in the SteamworksExample.<br>Virtual Reality:<br><ul class=\"bb_ul\"><li> Added VR_IsHmdPresent, which returns true if an HMD appears to be present but </li></ul>does not initialize the VR API. This is useful when enabling/disabling UI <br>elements to offer VR mode to a user.<br><ul class=\"bb_ul\"><li> Added VR_GetStringForHmdError which turns an HmdError enum value into a </li></ul><h2 class=\"bb_tag\">String.</h2><h2 class=\"bb_tag\">Steampipe</h2><ul class=\"bb_ul\"><li> The example Steampipe batch file (run_build.bat) now uses run_app_build_http </li></ul><h2 class=\"bb_tag\">Instead Of Run_app_build By Default.</h2><h2 class=\"bb_tag\">Contentprep.app</h2><ul class=\"bb_ul\"><li> Updated wxPython requirements for this app (version 2.7 and 2.8 supported). </li></ul>App will prompt with updated URL to download compatible packages if necessary.<br><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.30 10th July 2014</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">General</h2><ul class=\"bb_ul\"><li> Added a new Workshop item content API in ISteamUGC that is easy to use and </li></ul>allows multiple files per item without any size limits. It uses the same <br>  content system that handles regular content depots, resulting in faster and <br>smaller downloads due to delta patching. Subscribed workshop items will<br>  be placed in unique subfolders in the install folder, so the game doesn't need<br>to fetch them using ISteamRemoteStorage anymore. The new API is not<br>  backwards compatible with old items created with ISteamRemoteStorage. Added <br>Workshop feature to steamworksexample using ISteamUGC.<br>Steam VR:<br><ul class=\"bb_ul\"><li> VR_Init now requires that you call SteamAPI_Init first.<br></li><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.29 24th April 2014</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">General</h2><ul class=\"bb_ul\"><li> Adjust game server login to use a token instead of username/password. Tokens </li></ul>are randomly generated at account creation time and can be reset.<br><ul class=\"bb_ul\"><li> Added existing text param to ISteamUtils::ShowGamepadTextInput() so games can </li></ul><h2 class=\"bb_tag\">Prepopulate Control Before Displaying to User.</h2><ul class=\"bb_ul\"><li> Updated retail disc installer to use a single multi-language steamsetup.exe </li></ul><h2 class=\"bb_tag\">Replacing All Steam Install Msi Packages.</h2><ul class=\"bb_ul\"><li> Removed redistributable Steam libraries for dedicated servers. Standalone </li></ul>dedicated server should use shared &quot;Steamworks SDK Redist&quot; depots.<br><ul class=\"bb_ul\"><li> steamcmd is now included for Linux and OSX.</li></ul><h2 class=\"bb_tag\">Music</h2><ul class=\"bb_ul\"><li> Introducing API to control the Steam Music Player from external software. As </li></ul>an example this gives games the opportunity to pause the music or lower the <br>volume, when an important cut scene is shown, and start playing afterwards.<br><ul class=\"bb_ul\"><li> Added menu and code to the Steamworks Example to demonstrate this API.<br></li><li> This feature is currently limited to users in the Steam Music Player Beta. It </li></ul><h2 class=\"bb_tag\">Will Have No Effect On other Users.</h2><h2 class=\"bb_tag\">Ugc</h2><ul class=\"bb_ul\"><li> ISteamUGC - Add m_bCachedData to SteamUGCQueryCompleted_t and </li></ul>SteamUGCRequestUGCDetailsResult_t which can be used to determine if the data was<br>retrieved from the cache.<br><ul class=\"bb_ul\"><li> ISteamUGC - Allow clients to get cached responses for ISteamUGC queries. This </li></ul>is so client code doesn't have to build their own caching layer on top of <br>ISteamUGC.<br><ul class=\"bb_ul\"><li> ISteamRemoteStorage - add the name of the shared file to </li></ul>RemoteStorageFileShareResult_t so it can be matched up to the request if a game <br>has multiple outstanding FileShare requests going on at the same time<br>Steam VR:<br><ul class=\"bb_ul\"><li> Renamed GetEyeMatrix to GetHeadFromEyePose and made it return an HmdMatrix34t.</li></ul>This doesn't actually change the values it was returning, it just updates the <br>name to match the values that were already being returned. Changed the driver <br>interface too.<br><ul class=\"bb_ul\"><li> Renamed GetWorldFromHeadPose to GetTrackerFromHeadPose to avoid confusion </li></ul>about the game's world space vs. the tracker's coordinate system.<br><ul class=\"bb_ul\"><li> Also renamed GetLastWorldFromHeadPose to GetLastTrackerFromHeadPose.<br></li><li> Added GetTrackerZeroPose method to get the tracker zero pose.<br></li><li> Added VR support to the Linux/SDL version of the Steamworks Example.<br></li><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.28 28th January 2014</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------<br></li><li> Added Steamworks Virtual Reality API via steamvr.h.<br></li><li> Added ISteamUtils::IsSteamRunningInVRMode, which returns true if the Steam </li></ul><h2 class=\"bb_tag\">Client Is Running In Vr Mode.</h2><ul class=\"bb_ul\"><li> Deprecated ISteamGameserver::GetGameplayStats and </li></ul>ISteamGameserver::GetServerReputation. These calls already return no data and <br>will be removed in a future SDK update.<br><ul class=\"bb_ul\"><li> Added result code k_EResultRateLimitExceeded, which can now be returned if a </li></ul><h2 class=\"bb_tag\">User Has too Many outstanding Friend Requests.</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.26a 14th November 2013</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------<br></li><li> Fix missing accessor function in steam_api.h for SteamUGC()<br></li><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.26 6th November 2013</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------<br></li><li> Includes libsteam_api.so for 64-bit Linux.<br></li><li> Callbacks ValidateAuthTicketResponse_t and GSClientApprove_t now contain the </li></ul>SteamID of the owner of current game. If the game is borrowed, this is different<br>than the player's SteamID.<br><ul class=\"bb_ul\"><li> Added ISteamFriends::GetPlayerNickname, which returns the nickname the current</li></ul><h2 class=\"bb_tag\">User Has Set For the Specified Player.</h2><ul class=\"bb_ul\"><li> Fix p2p networking apis on Linux so they work with dedicated servers<br></li><li> Fix command line argument handling bug in SteamAPI_RestartAppIfNecessary on </li></ul><h2 class=\"bb_tag\">Linux and Osx.</h2><ul class=\"bb_ul\"><li> Added ISteamApps::GetLaunchQueryParam, which will get the value associated </li></ul>with the given key if a game is launched via a url with query paramaters, such <br>as steam://run///?param1=value1;param2=value2;param3=value3.  If the game<br>is already running when such a url is executed, instead it will receive a <br>NewLaunchQueryParameters_t callback.<br><ul class=\"bb_ul\"><li> Added EUGCReadAction parameter to ISteamRemoteStorage:UGCRead that allows the </li></ul>game to keep the file open if it needs to seek around the file for arbitrary <br>data, rather than always closing the file when the last byte is read.<br><ul class=\"bb_ul\"><li> Added new ISteamUGC interface that is used for querying for lists of UGC </li></ul>details (e.g. Workshop items, screenshots, videos, artwork, guides, etc.). The <br>ISteamUGC interface should be used instead of ISteamRemoteStorage, which <br>contains similar, but less flexible and powerful functionality.<br><ul class=\"bb_ul\"><li> Removed tools for deprecated content system<br></li><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.25 1st october 2013</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------<br></li><li> Fixed a crash in the 1.24 SDK update when attempting to call </li></ul>ISteamRemoteStorage::GetPublishedFileDetails by adding a missing parameter <br>unMaxSecondsOld, which allows a game to request potentially-cached details <br>(passing a value of 0 retains the previous behavior).<br><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">V1.24</h2><h2 class=\"bb_tag\">17th July 2013</h2><ul class=\"bb_ul\"><li>---------------------------------------------------------------</li></ul><h2 class=\"bb_tag\">User</h2><ul class=\"bb_ul\"><li> Added ISteamUser::GetBadgeLevel and ISteamUser::GetPlayerSteamLevel functions</li></ul><h2 class=\"bb_tag\">Friends</h2><ul class=\"bb_ul\"><li> Games can now initiate Steam Friend requests, removals, request -accepts and </li></ul>request-ignores via ISteamFriends  ActivateGameOverlayToUser API. This prompts <br>ï¿½<br>the user for confirmation before action is taken.<br>Mac:<br><ul class=\"bb_ul\"><li> Updated the OS X Content Prep tool and game wrapper for improved compatibility</li></ul><h2 class=\"bb_tag\">With Os X 10.8 (mountain Lion).</h2><h2 class=\"bb_tag\">Linux</h2><ul class=\"bb_ul\"><li> Added install script for the Steam Linux Runtime tools (run &quot;bash </li></ul>",
            "short_description": "To throw from the balcony of packets of water funny shoot from the apartment window at passers-by with a slingshot fun. All this awaits you in this interesting and exciting game. So as you are waiting for surprises.",
            "fullgame": {
                "appid": "542340",
                "name": "Slingshot people"
            },
            "supported_languages": "English<strong>*</strong><br><strong>*</strong>languages with full audio support",
            "header_image": "https://steamcdn-a.akamaihd.net/steam/apps/542390/header.jpg?t=1481234049",
            "website": "https://vk.com/id41375901",
            "pc_requirements": {
                "minimum": "<strong>Minimum:</strong><br><ul class=\"bb_ul\"><li><strong>OS:</strong> Windows XP/Vista/7<br></li><li><strong>Processor:</strong> Ñ ÑÐ°ÐºÑÐ¾Ð²Ð¾Ð¹ ÑÐ°ÑÑÐ¾ÑÐ¾Ð¹ 1 ÐÐÑ<br></li><li><strong>Memory:</strong> 512 MB RAM<br></li><li><strong>Graphics:</strong> ÑÐ¾ 128 ÐÐ Ð²Ð¸Ð´ÐµÐ¾Ð¿Ð°Ð¼ÑÑÐ¸, ÑÐ¾Ð²Ð¼ÐµÑÑÐ¸Ð¼Ð°Ñ Ñ DirectX<br></li><li><strong>DirectX:</strong> Version 12<br></li><li><strong>Storage:</strong> 1 GB available space<br></li><li><strong>Sound Card:</strong> ÑÐ¾Ð²Ð¼ÐµÑÑÐ¸Ð¼Ð°Ñ Ñ DirectX 9.0c<br></li><li><strong>Additional Notes:</strong> +</li></ul>"
            },
            "mac_requirements": [],
            "linux_requirements": [],
            "legal_notice": "Â©2016 ALEXANDR KOLOBAEV",
            "developers": [
                "ALEXANDR KOLOBAEV"
            ],
            "publishers": [
                "ALEXANDR KOLOBAEV"
            ],
            "package_groups": [],
            "platforms": {
                "windows": true,
                "mac": false,
                "linux": false
            },
            "categories": [
                {
                    "id": 2,
                    "description": "Single-player"
                },
                {
                    "id": 10,
                    "description": "Game demo"
                },
                {
                    "id": 22,
                    "description": "Steam Achievements"
                }
            ],
            "genres": [
                {
                    "id": "1",
                    "description": "Action"
                }
            ],
            "screenshots": [
                {
                    "id": 0,
                    "path_thumbnail": "https://steamcdn-a.akamaihd.net/steam/apps/542390/ss_ea13875c7d139a3425ae173319d081cc1b40f260.600x338.jpg?t=1481234049",
                    "path_full": "https://steamcdn-a.akamaihd.net/steam/apps/542390/ss_ea13875c7d139a3425ae173319d081cc1b40f260.1920x1080.jpg?t=1481234049"
                }
            ],
            "release_date": {
                "coming_soon": true,
                "date": "20 Oct, 2016"
            },
            "support_info": {
                "url": "https://vk.com/id41375901",
                "email": "volond430@yandex.ru"
            },
            "background": "https://steamcdn-a.akamaihd.net/steam/apps/542390/page_bg_generated_v6b.jpg?t=1481234049",
            "content_descriptors": {
                "ids": [],
                "notes": null
            }
        }
    }
}